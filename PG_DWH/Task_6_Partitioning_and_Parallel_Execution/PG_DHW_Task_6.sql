-- Create the main partitioned table
CREATE TABLE SALES_INFO_DP (
    id INTEGER,
    category VARCHAR(100),
    ischeck BOOLEAN,
    eventdate DATE
) PARTITION BY RANGE (eventdate);






-- Create partition for the year 2021
CREATE TABLE SALES_INFO_DP_2021 PARTITION OF SALES_INFO_DP
FOR VALUES FROM ('2021-01-01') TO ('2022-01-01')
PARTITION BY LIST (category);

-- Create partition for the year 2022
CREATE TABLE SALES_INFO_DP_2022 PARTITION OF SALES_INFO_DP
FOR VALUES FROM ('2022-01-01') TO ('2023-01-01')
PARTITION BY LIST (category);

-- Create partition for the year 2023
CREATE TABLE SALES_INFO_DP_2023 PARTITION OF SALES_INFO_DP
FOR VALUES FROM ('2023-01-01') TO ('2024-01-01')
PARTITION BY LIST (category);

-- Create partition for the year 2024
CREATE TABLE SALES_INFO_DP_2024 PARTITION OF SALES_INFO_DP
FOR VALUES FROM ('2024-01-01') TO ('2025-01-01')
PARTITION BY LIST (category);




-- Sub-partitions for 2021
CREATE TABLE SALES_INFO_DP_2021_CAT_A_B PARTITION OF SALES_INFO_DP_2021
FOR VALUES IN ('A', 'B');

CREATE TABLE SALES_INFO_DP_2021_CAT_C_D_E_F PARTITION OF SALES_INFO_DP_2021
FOR VALUES IN ('C', 'D', 'E', 'F',null);

CREATE TABLE SALES_INFO_DP_2021_DEFAULT PARTITION OF SALES_INFO_DP_2021
FOR VALUES IN ('DEFAULT');

-- Sub-partitions for 2022
CREATE TABLE SALES_INFO_DP_2022_CAT_A_B PARTITION OF SALES_INFO_DP_2022
FOR VALUES IN ('A', 'B');

CREATE TABLE SALES_INFO_DP_2022_CAT_C_D_E_F PARTITION OF SALES_INFO_DP_2022
FOR VALUES IN ('C', 'D', 'E', 'F',null);

CREATE TABLE SALES_INFO_DP_2022_DEFAULT PARTITION OF SALES_INFO_DP_2022
FOR VALUES IN ('DEFAULT');

-- Sub-partitions for 2023
CREATE TABLE SALES_INFO_DP_2023_CAT_A_B PARTITION OF SALES_INFO_DP_2023
FOR VALUES IN ('A', 'B');

CREATE TABLE SALES_INFO_DP_2023_CAT_C_D_E_F PARTITION OF SALES_INFO_DP_2023
FOR VALUES IN ('C', 'D', 'E', 'F',null);

CREATE TABLE SALES_INFO_DP_2023_DEFAULT PARTITION OF SALES_INFO_DP_2023
FOR VALUES IN ('DEFAULT');

-- Sub-partitions for 2024
CREATE TABLE SALES_INFO_DP_2024_CAT_A_B PARTITION OF SALES_INFO_DP_2024
FOR VALUES IN ('A', 'B');

CREATE TABLE SALES_INFO_DP_2024_CAT_C_D_E_F PARTITION OF SALES_INFO_DP_2024
FOR VALUES IN ('C', 'D', 'E', 'F',null);

CREATE TABLE SALES_INFO_DP_2024_DEFAULT PARTITION OF SALES_INFO_DP_2024
FOR VALUES IN ('DEFAULT');



INSERT INTO SALES_INFO_DP(id,category, ischeck, EventDate)
SELECT id
,('{"A","B","C","D","E","F"}'::text[])[((
RANDOM())*10)::INTEGER] category
 ,((1*(RANDOM())::INTEGER)<1) ischeck
 ,(NOW() - '10 day'::INTERVAL * (RANDOM()::int * 100))::
DATE EventDate
FROM generate_series(1,10000000) id;

UPDATE SALES_INFO_DP
SET category = 'B'
WHERE category = 'A' AND eventdate >= '2021-01-01' AND eventdate < '2022-01-01';





-- 5.1 Select all rows
EXPLAIN ANALYZE SELECT * FROM SALES_INFO_DP;

-- 5.2 Select with a range of dates
EXPLAIN ANALYZE SELECT * FROM SALES_INFO_DP WHERE eventdate BETWEEN '2023-01-01' AND '2023-12-31';

-- 5.3 Select an exact date
EXPLAIN ANALYZE SELECT * FROM SALES_INFO_DP WHERE eventdate = '2023-07-01';

-- 5.4 Select an exact category
EXPLAIN ANALYZE SELECT * FROM SALES_INFO_DP WHERE category = 'A';

-- 5.5 Select a list of categories
EXPLAIN ANALYZE SELECT * FROM SALES_INFO_DP WHERE category IN ('A', 'B');

-- 5.6 Select a list of categories in an exact date
EXPLAIN ANALYZE SELECT * FROM SALES_INFO_DP WHERE category IN ('A', 'B') AND eventdate = '2023-07-01';

-- 5.7 Count all rows
EXPLAIN ANALYZE SELECT COUNT(*) FROM SALES_INFO_DP;

-- 5.8 Count rows with a range of dates
EXPLAIN ANALYZE SELECT COUNT(*) FROM SALES_INFO_DP WHERE eventdate BETWEEN '2023-01-01' AND '2023-12-31';









SET max_parallel_workers_per_gather = 4;


EXPLAIN ANALYZE SELECT * FROM SALES_INFO;


EXPLAIN ANALYZE SELECT * FROM SALES_INFO_DP;


EXPLAIN ANALYZE SELECT * FROM SALES_INFO_SIMPLE;



EXPLAIN ANALYZE SELECT * FROM SALES_INFO ORDER BY eventdate;

EXPLAIN ANALYZE SELECT * FROM SALES_INFO_DP ORDER BY eventdate;

EXPLAIN ANALYZE SELECT * FROM SALES_INFO_SIMPLE ORDER BY eventdate;


EXPLAIN ANALYZE SELECT COUNT(*) FROM SALES_INFO;


EXPLAIN ANALYZE SELECT COUNT(*) FROM SALES_INFO_DP;


EXPLAIN ANALYZE SELECT COUNT(*) FROM SALES_INFO_SIMPLE;


EXPLAIN ANALYZE SELECT * FROM SALES_INFO WHERE eventdate BETWEEN '2023-01-01' AND '2023-12-31';


EXPLAIN ANALYZE SELECT * FROM SALES_INFO_DP WHERE eventdate BETWEEN '2023-01-01' AND '2023-12-31';


EXPLAIN ANALYZE SELECT * FROM SALES_INFO_SIMPLE WHERE eventdate BETWEEN '2023-01-01' AND '2023-12-31';


EXPLAIN ANALYZE
SELECT COUNT(*)
FROM SALES_INFO AS s
JOIN SALES_INFO_DP AS d ON s.id = d.id
WHERE d.eventdate = '2023-07-01';


CREATE INDEX idx_sales_info_dp_eventdate ON SALES_INFO_DP(eventdate);
CREATE INDEX idx_sales_info_dp_category ON SALES_INFO_DP(category);
CREATE INDEX idx_sales_info_eventdate ON SALES_INFO(eventdate);
CREATE INDEX idx_sales_info_category ON SALES_INFO(category);





	-- Query for SALES_INFO_DP after adding indexes
EXPLAIN ANALYZE SELECT * FROM SALES_INFO_DP;
EXPLAIN ANALYZE SELECT * FROM SALES_INFO_DP ORDER BY eventdate;
EXPLAIN ANALYZE SELECT COUNT(*) FROM SALES_INFO_DP;
EXPLAIN ANALYZE SELECT * FROM SALES_INFO_DP WHERE eventdate BETWEEN '2023-01-01' AND '2023-12-31';
EXPLAIN ANALYZE SELECT category, COUNT(*) FROM SALES_INFO_DP GROUP BY category;
EXPLAIN ANALYZE
SELECT COUNT(*)
FROM SALES_INFO AS s
JOIN SALES_INFO_DP AS d ON s.id = d.id
WHERE d.eventdate = '2023-07-01';



